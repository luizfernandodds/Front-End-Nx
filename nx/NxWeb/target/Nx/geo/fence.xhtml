<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	template="/templates/administration_list.xhtml"
	xmlns:h="jakarta.faces.html" xmlns:f="jakarta.faces.core"
	xmlns:p="http://primefaces.org/ui" xmlns:ui="jakarta.faces.facelets">

	<ui:param name="headTitle" value="#{msg.fence_msg_head}" />
	<ui:param name="buttonNew" value="#{msg.fence_button_new}" />
	<ui:param name="beanClass" value="#{fenceController}" />

	<ui:define name="head">

		<p:growl id="growl" showDetail="true" life="6000" />
		<ui:include src="/resources/includes/map_define.xhtml" />
		
		<h:outputScript name="main_grid.js" library="js" />
		<h:outputScript name="utils.js" library="js" />
		<h:outputScript name="channel.js" library="js" />
		<h:outputScript name="chart.js" library="js" />
		<h:outputScript name="atlas.js" library="js" />
		<h:outputScript name="report.js" library="js" />
	
    	<h:outputScript target="body">
			function onBodyLoad() {
    			if(document.getElementById('data_form:obj_id').value!=""){
	        	 	document.getElementById('data_form:button_edit').click();
	        	}else{
	        	 	document.getElementById('data_form:button_new').click();
	        	}
	        }
    	
    	
			$(window).on('load',function() {
				MapLayer.configure({mapButtons : [ {name : "btDrawClear", imgOff : "/resources/images/map/tools/map_eraser_deactivated.png", 
                imgOn : "/resources/images/map/tools/map_eraser_activated.png", cursor : "pointer", alt : "#{msg.fence_admin_eraser}", 
                sizeX : 28, sizeY : 27, posX : 141, posY : 13, funcOn : "MapLayer.drawEraser('data_form')", funcOff : "MapLayer.drawDeactivate()", 
                allign : "left"}, {name : "btDrawFence", imgOff : "/resources/images/map/tools/map_pencil_deactivated.png", 
				imgOn : "/resources/images/map/tools/map_pencil_activated.png", cursor : "pointer", alt : "#{msg.fence_admin_draw}", 
				sizeX : 28, sizeY : 27, posX : 170, posY : 13, funcOn : "MapLayer.drawPolygon('data_form:wkt')", funcOff : "MapLayer.drawDeactivate()", 
				allign : "left"}]});
				MapLayer.startup();
				onBodyLoad();
			});
			
			var fence_admin_move = "#{msg.fence_admin_move}";
			var fence_admin_edit = "#{msg.fence_admin_edit}";
		</h:outputScript>
					
		<style type="text/css">
			#map_canvas {
				width: 100%;
				height: 350px;
				border: 1px solid #ccc;
			}	
		</style>
	</ui:define>
	
	<ui:define name="title">#{msg.fence_title}</ui:define>

	<ui:define name="content">
		<h:form id="data_form" >
			<p:panel rendered="#{fenceController.renderListForm eq false}">
				<div class="col-12" >
					<div class="card">
						<h5>#{msg.fence_cad_title}</h5>
						<div id="gr2">
							<div id="map_canvas">
							    <div id="popup" >
							      <a href="#" id="popup-closer" class="ol-popup-closer"></a>
							      <div id="popup-content"></div>
							    </div>
						    </div>			
						</div>  
				
						<div class="ui-fluid formgrid grid">
							<div class="field col-12 md:col-4">
								<h:outputLabel for="customer" value="#{msg.fence_customer}" rendered="#{auth.hasRole('target_clients_child')}" />
								<p:selectOneMenu id="customer" rendered="#{auth.hasRole('target_clients_child')}"
									value="#{fenceController.fence.customer}" converter="entityConverter" filter="true" filterMatchMode="contains">
									<f:selectItem itemLabel="#{msg.login_client_admin_select}" itemValue="0" />
									<f:selectItems value="#{fenceController.listCustomer}" var="s" itemValue="#{s}" itemLabel="#{s.name}" />
								</p:selectOneMenu>
								<p:message id="clientMessage" for="client" />
							</div>
							<div class="field col-12 md:col-6">
								<h:outputLabel for="name" value="#{msg.fence_admin_name}" />
								<p:inputText id="name" value="#{fenceController.fence.name}" required="true"
									requiredMessage="#{msg.field_required} (#{msg.fence_name})" />
								<p:message id="nameMessage" for="name" />						
							</div>
							<div class="field col-12 md:col-6">
								<h:outputLabel for="desc" value="#{msg.fence_admin_description}" />
								<p:inputTextarea id="desc" value="#{fenceController.fence.description}"/>
								<p:message id="descMessage" for="desc" />
							</div>
							<div id="divInfo"></div>
						</div>
	
						<div class="grid button-demo">
							<h:panelGrid columns="3">
								<p:commandButton id="buttonDataBack" value="#{msg.header_buton_back}"
									action="#{fenceController.back}" process="@this" update="data_form"
									styleClass="ui-button-raised ui-button-secondary p-mr-2 p-mb-2" />
	
								<p:commandButton id="buttonDataClean" value="#{msg.header_buton_clean}"
									action="#{fenceController.reset}" update="data_form"
									styleClass="ui-button-raised p-mr-2 p-mb-2" process="@this" />
	
								<p:commandButton id="buttonDataSave" value="#{msg.header_button_save}"
									action="#{fenceController.save}" update="data_form growl"
									styleClass="ui-button-raised p-mr-2 p-mb-2" process="@form" />
	
							</h:panelGrid>
						</div>
					</div>
				</div>
			</p:panel>

			<p:panel rendered="#{fenceController.renderListForm eq true}">

				<div class="grid crud-demo">
					<div class="col-12" >
						<div class="card">
							<ui:insert name="viewname" />
							<p:dataTable id="avaliableList" var="list" reflow="true" paginator="true" scrollable="true"
								value="#{fenceController.listFence}" widgetVar="dataTable"
								selection="true" rows="100" rowsPerPageTemplate="100,500,1000"
								rowKey="#{list.id}" rowkey="avaliableList" emptyMessage="#{msg.admin_empty_list}"
								paginatorAlwaysVisible="true" filteredValue="#{fenceController.filteredFence}"
								draggableColumns="true" paginatorPosition="bottom">
	
								<f:facet name="header">
									<div class="products-table-header">
										<div>
										</div>
										<div class="ui-inputgroup">
	                                      <span class="filter-container">
	                                        <p:inputText id="query" value="#{fenceController.nameSearch}" placeholder="#{msg.fence_name_search}"/>
	                                        <p:commandButton value="#{msg.header_button_find}" action="#{fenceController.searchFence}" update="data_form:avaliableList growl"/> 
	                                    </span>
	                                    </div>
	                                </div>    
	                            </f:facet>
	                            
								<p:column headerText="#{msg.fence_name}" filterBy="#{list.name}" sortBy="#{list.name}" filterMatchMode="contains"
									filterStyle="width: 80%;">
									<h:outputText value="#{list.name}" />
								</p:column>
								<p:column headerText="#{msg.fence_description}"
									filterBy="#{list.description}" sortBy="#{list.description}"
									filterMatchMode="contains" filterStyle="width: 80%;">
									<h:outputText value="#{list.description}" />
								</p:column>
								<p:column headerText="#{msg.fence_create_date}"
									filterBy="#{fenceController.formatTimeZone(list.createdate)}"
									sortBy="#{list.createdate}" filterMatchMode="contains"
									filterStyle="width: 80%;">
									<h:outputText value="#{fenceController.formatTimeZone(list.createdate)}" />
								</p:column>
	
								<p:column headerText="#{msg.header_button_action}" style="width:82px;text-align: center">
									<p:commandButton icon="pi pi-pencil" title="#{msg.fence_edit}"
										styleClass="edit-button rounded-button ui-button-success"
										action="#{fenceController.populateFence(list)}">
										<f:setPropertyActionListener value="#{list}" target="#{fenceController.protocol}" />
										<f:param name="fence" value="#{list}" />
									</p:commandButton>
	
									<p:commandButton id="buttonDataRemove" action="#{fenceController.remove}"
										styleClass="rounded-button ui-button-danger p-mr-2 p-mb-2"
										icon="pi pi-times" process="@this" update="avaliableList growl">
										<f:setPropertyActionListener value="#{list}" target="#{fenceController.fence}" />
										<p:confirm header="#{msg.control_point_button_remove}"
											message="#{msg.admin_confirm_remove_text}"
											icon="pi pi-exclamation-triangle" />
									</p:commandButton>
	
								</p:column>
							</p:dataTable>
						</div>
					</div>
				</div>
			</p:panel>
			
			<h:inputHidden id="wkt" value="#{fenceController.wkt}"/>
			<h:inputHidden id="obj_id" value="#{fenceController.fence.id}" />	
			<h:inputHidden id="boundingbox" value="#{fenceController.boundingBoxToZoom}" />		
		</h:form>
	</ui:define>
</ui:composition>